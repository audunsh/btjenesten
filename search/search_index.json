{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"V\u00e5r utstrakte virtuelle h\u00e5nd Studentene i B-tjenesten (beregningstjenesten) ved Kjemisk institutt, UiO bidrar til b\u00e5de godt milj\u00f8, veiledning og utvikling. Ved siden av v\u00e5r ukentlige veiledningstjeneste p\u00e5 Dalton (MU20) er vi involvert i programmering- og beregningsorientert innovasjon i undervisningen ved instituttet. Vi utvikler blant annet undervisningsmateriell, dokumentasjon, og kan bist\u00e5 med \u00e5 tilrettelegge eksisterende kode for undervisning. For \u00e5 im\u00f8tekomme en verden hvor nyvinninger br\u00e5tt kan skape nye behov og muligheter trenger vi dessuten ofte ny kode og tekniske l\u00f8sninger for undervisningen. V\u00e5re bidrag til dette finner du i v\u00e5r utstrakte virtuelle h\u00e5nd; Python-modulen btjenesten . Du kan installere oss med pip install btjenesten ...og importere oss med import btjenesten P\u00e5 disse sidene finner du dokumentasjon for v\u00e5r modul, samt litt informasjon om v\u00e5re aktiviteter. For mer informasjon, kom innom B-tjenesten p\u00e5 v\u00e5re veilednings\u00f8kter, torsdager 14.00-16.00 p\u00e5 Dalton (MU20) ved Kjemisk institutt, UiO. B-tjenesten","title":"Hjem"},{"location":"#var-utstrakte-virtuelle-hand","text":"Studentene i B-tjenesten (beregningstjenesten) ved Kjemisk institutt, UiO bidrar til b\u00e5de godt milj\u00f8, veiledning og utvikling. Ved siden av v\u00e5r ukentlige veiledningstjeneste p\u00e5 Dalton (MU20) er vi involvert i programmering- og beregningsorientert innovasjon i undervisningen ved instituttet. Vi utvikler blant annet undervisningsmateriell, dokumentasjon, og kan bist\u00e5 med \u00e5 tilrettelegge eksisterende kode for undervisning. For \u00e5 im\u00f8tekomme en verden hvor nyvinninger br\u00e5tt kan skape nye behov og muligheter trenger vi dessuten ofte ny kode og tekniske l\u00f8sninger for undervisningen. V\u00e5re bidrag til dette finner du i v\u00e5r utstrakte virtuelle h\u00e5nd; Python-modulen btjenesten . Du kan installere oss med pip install btjenesten ...og importere oss med import btjenesten P\u00e5 disse sidene finner du dokumentasjon for v\u00e5r modul, samt litt informasjon om v\u00e5re aktiviteter. For mer informasjon, kom innom B-tjenesten p\u00e5 v\u00e5re veilednings\u00f8kter, torsdager 14.00-16.00 p\u00e5 Dalton (MU20) ved Kjemisk institutt, UiO. B-tjenesten","title":"V\u00e5r utstrakte virtuelle h\u00e5nd"},{"location":"bbtools-reference/","text":"Box-Behnken Tools (bbtools) bbdesign ( n_center = 3 , randomize = True , sheet = None ) Returns a Box-Benhken experimental design for 3 variables Author: Audun Skau Hansen, Department of Chemistry, UiO n_center = number of samples in the center randomize = whether or not to randomize the ordering sheet = sheet containing the min/max values of variables Source code in btjenesten/bbtools.py def bbdesign ( n_center = 3 , randomize = True , sheet = None ): \"\"\" Returns a Box-Benhken experimental design for 3 variables Author: Audun Skau Hansen, Department of Chemistry, UiO n_center = number of samples in the center randomize = whether or not to randomize the ordering sheet = sheet containing the min/max values of variables \"\"\" a = np . arange ( - 1 , 2 ) A = np . array ( np . meshgrid ( a , a , a )) . reshape ( 3 , - 1 ) . T A = np . concatenate ([ A [ np . sum ( A ** 2 , axis = 1 ) == 2 , :], np . zeros (( n_center , 3 ))]) ai = np . arange ( len ( A )) if randomize == True : # randomize run order np . random . shuffle ( ai ) if sheet is not None : # Transform coordinates tm = np . array ( to_array ( sheet )[ 1 :, 1 :], dtype = float ) for i in range ( 3 ): A [:, i ] = interp1d ( np . linspace ( - 1 , 1 , 2 ), tm [ i ] )( A [:, i ]) #A = A.dot(tm) return A [ ai , :] bbsetup () Returns an interactive sheet (ipysheet) for setting up a Box-Benkhen design session Author: Audun Skau Hansen, Department of Chemistry, UiO Source code in btjenesten/bbtools.py def bbsetup (): \"\"\" Returns an interactive sheet (ipysheet) for setting up a Box-Benkhen design session Author: Audun Skau Hansen, Department of Chemistry, UiO \"\"\" global sheet arr = np . zeros (( 4 , 3 ), dtype = object ) arr [ 0 , 0 ] = \"\" arr [ 1 , 0 ] = \"Variable A\" arr [ 2 , 0 ] = \"Variable B\" arr [ 3 , 0 ] = \"Variable C\" arr [ 0 , 1 ] = \"Minimum\" arr [ 0 , 2 ] = \"Maximum\" arr [ 1 :, 1 ] = - 1 arr [ 1 :, 2 ] = 1 sheet = from_array ( arr ) sheet . column_headers = False sheet . row_headers = False return sheet bbsheet ( sheet ) Returns a Box-Behnken sheet for gathering experimental results Author: Audun Skau Hansen, Department of Chemistry, UiO sheet = setup from bbsetup Source code in btjenesten/bbtools.py def bbsheet ( sheet ): \"\"\" Returns a Box-Behnken sheet for gathering experimental results Author: Audun Skau Hansen, Department of Chemistry, UiO sheet = setup from bbsetup \"\"\" bd = bbdesign ( sheet = sheet ) global bb_sheet sh = to_array ( sheet ) arr = np . zeros ( bd . shape + np . array ([ 1 , 2 ]), dtype = object ) arr [ 0 , 0 ] = \"Run\" arr [ 0 , 1 ] = sh [ 1 , 0 ] #variable A arr [ 0 , 2 ] = sh [ 2 , 0 ] #variable A arr [ 0 , 3 ] = sh [ 3 , 0 ] #variable A arr [ 0 , 4 ] = \"Result\" #variable A arr [ 1 :, 0 ] = np . arange ( bd . shape [ 0 ]) + 1 # Experiment number arr [ 1 :, 1 : 4 ] = bd bb_sheet = from_array ( arr ) bb_sheet . column_headers = False bb_sheet . row_headers = False return bb_sheet minitable ( titles , values , sheet ) Generate a mini-table for displaying inter-variable dependencies as indicated by the model Author: Audun Skau Hansen, Department of Chemistry, UiO Source code in btjenesten/bbtools.py def minitable ( titles , values , sheet ): \"\"\" Generate a mini-table for displaying inter-variable dependencies as indicated by the model Author: Audun Skau Hansen, Department of Chemistry, UiO \"\"\" arr = np . zeros (( len ( titles ), 2 ), dtype = object ) arr [:, 0 ] = relabel_defaults ( titles , sheet ) arr [:, 1 ] = values return from_array ( arr ) relabel_defaults ( titles , sheet ) Rename default variable (\"x0\", \"x1\", \"x2\") to variable names from sheet[1:,0] Author: Audun Skau Hansen, Department of Chemistry, UiO Source code in btjenesten/bbtools.py def relabel_defaults ( titles , sheet ): \"\"\" Rename default variable (\"x0\", \"x1\", \"x2\") to variable names from sheet[1:,0] Author: Audun Skau Hansen, Department of Chemistry, UiO \"\"\" new_names = to_array ( sheet )[ 1 : 4 , 0 ] new_titles = [] for i in titles : new_titles . append ( i . replace ( \"x0\" , new_names [ 0 ]) . replace ( \"x1\" , new_names [ 1 ]) . replace ( \"x2\" , new_names [ 2 ]) ) return new_titles visualize_surfaces ( sheet , regressor , Nx = 300 ) Visualize response surfaces the regressor model Author: Audun Skau Hansen, Department of Chemistry, UiO (2022) sheet = Box-Benhken data sheet regressor = sklearn LinearRegression instance Nx = mesh resolution along each axis Source code in btjenesten/bbtools.py def visualize_surfaces ( sheet , regressor , Nx = 300 ): \"\"\" Visualize response surfaces the regressor model Author: Audun Skau Hansen, Department of Chemistry, UiO (2022) sheet = Box-Benhken data sheet regressor = sklearn LinearRegression instance Nx = mesh resolution along each axis \"\"\" bounds = np . array ( to_array ( sheet )[ 1 :, 1 :], dtype = float ) xa = np . linspace ( bounds [ 0 , 0 ], bounds [ 0 , 1 ], Nx ) xb = np . linspace ( bounds [ 1 , 0 ], bounds [ 1 , 1 ], Nx ) xc = np . linspace ( bounds [ 2 , 0 ], bounds [ 2 , 1 ], Nx ) xab3 = np . vstack (( np . array ( np . meshgrid ( xa , xb )) . reshape ( 2 , - 1 ), np . zeros ( Nx ** 2 ))) . T yab = regressor . predict ( xab3 ) . reshape (( Nx , Nx )) plt . figure ( figsize = ( 9.5 , 8 )) plt . title ( to_array ( sheet )[ 1 , 0 ] + \" vs \" + to_array ( sheet )[ 2 , 0 ]) plt . contourf ( xa , xb , yab ) plt . xlabel ( to_array ( sheet )[ 1 , 0 ]) plt . ylabel ( to_array ( sheet )[ 2 , 0 ]) plt . colorbar () plt . show () xac3 = np . vstack (( np . array ( np . meshgrid ( xa , xc )) . reshape ( 2 , - 1 ), np . zeros ( Nx ** 2 ))) . T yac = regressor . predict ( xac3 ) . reshape (( Nx , Nx )) plt . figure ( figsize = ( 9.5 , 8 )) plt . title ( to_array ( sheet )[ 1 , 0 ] + \" vs \" + to_array ( sheet )[ 3 , 0 ]) plt . contourf ( xa , xc , yac ) plt . xlabel ( to_array ( sheet )[ 1 , 0 ]) plt . ylabel ( to_array ( sheet )[ 3 , 0 ]) plt . colorbar () plt . show () xbc3 = np . vstack (( np . array ( np . meshgrid ( xb , xc )) . reshape ( 2 , - 1 ), np . zeros ( Nx ** 2 ))) . T ybc = regressor . predict ( xbc3 ) . reshape (( Nx , Nx )) plt . figure ( figsize = ( 9.5 , 8 )) plt . title ( to_array ( sheet )[ 2 , 0 ] + \" vs \" + to_array ( sheet )[ 3 , 0 ]) plt . contourf ( xb , xc , ybc ) plt . xlabel ( to_array ( sheet )[ 2 , 0 ]) plt . ylabel ( to_array ( sheet )[ 3 , 0 ]) plt . colorbar () plt . show ()","title":"bbtools"},{"location":"bbtools-reference/#box-behnken-tools-bbtools","text":"","title":"Box-Behnken Tools (bbtools)"},{"location":"bbtools-reference/#btjenesten.bbtools.bbdesign","text":"Returns a Box-Benhken experimental design for 3 variables Author: Audun Skau Hansen, Department of Chemistry, UiO n_center = number of samples in the center randomize = whether or not to randomize the ordering sheet = sheet containing the min/max values of variables Source code in btjenesten/bbtools.py def bbdesign ( n_center = 3 , randomize = True , sheet = None ): \"\"\" Returns a Box-Benhken experimental design for 3 variables Author: Audun Skau Hansen, Department of Chemistry, UiO n_center = number of samples in the center randomize = whether or not to randomize the ordering sheet = sheet containing the min/max values of variables \"\"\" a = np . arange ( - 1 , 2 ) A = np . array ( np . meshgrid ( a , a , a )) . reshape ( 3 , - 1 ) . T A = np . concatenate ([ A [ np . sum ( A ** 2 , axis = 1 ) == 2 , :], np . zeros (( n_center , 3 ))]) ai = np . arange ( len ( A )) if randomize == True : # randomize run order np . random . shuffle ( ai ) if sheet is not None : # Transform coordinates tm = np . array ( to_array ( sheet )[ 1 :, 1 :], dtype = float ) for i in range ( 3 ): A [:, i ] = interp1d ( np . linspace ( - 1 , 1 , 2 ), tm [ i ] )( A [:, i ]) #A = A.dot(tm) return A [ ai , :]","title":"bbdesign()"},{"location":"bbtools-reference/#btjenesten.bbtools.bbsetup","text":"Returns an interactive sheet (ipysheet) for setting up a Box-Benkhen design session Author: Audun Skau Hansen, Department of Chemistry, UiO Source code in btjenesten/bbtools.py def bbsetup (): \"\"\" Returns an interactive sheet (ipysheet) for setting up a Box-Benkhen design session Author: Audun Skau Hansen, Department of Chemistry, UiO \"\"\" global sheet arr = np . zeros (( 4 , 3 ), dtype = object ) arr [ 0 , 0 ] = \"\" arr [ 1 , 0 ] = \"Variable A\" arr [ 2 , 0 ] = \"Variable B\" arr [ 3 , 0 ] = \"Variable C\" arr [ 0 , 1 ] = \"Minimum\" arr [ 0 , 2 ] = \"Maximum\" arr [ 1 :, 1 ] = - 1 arr [ 1 :, 2 ] = 1 sheet = from_array ( arr ) sheet . column_headers = False sheet . row_headers = False return sheet","title":"bbsetup()"},{"location":"bbtools-reference/#btjenesten.bbtools.bbsheet","text":"Returns a Box-Behnken sheet for gathering experimental results Author: Audun Skau Hansen, Department of Chemistry, UiO sheet = setup from bbsetup Source code in btjenesten/bbtools.py def bbsheet ( sheet ): \"\"\" Returns a Box-Behnken sheet for gathering experimental results Author: Audun Skau Hansen, Department of Chemistry, UiO sheet = setup from bbsetup \"\"\" bd = bbdesign ( sheet = sheet ) global bb_sheet sh = to_array ( sheet ) arr = np . zeros ( bd . shape + np . array ([ 1 , 2 ]), dtype = object ) arr [ 0 , 0 ] = \"Run\" arr [ 0 , 1 ] = sh [ 1 , 0 ] #variable A arr [ 0 , 2 ] = sh [ 2 , 0 ] #variable A arr [ 0 , 3 ] = sh [ 3 , 0 ] #variable A arr [ 0 , 4 ] = \"Result\" #variable A arr [ 1 :, 0 ] = np . arange ( bd . shape [ 0 ]) + 1 # Experiment number arr [ 1 :, 1 : 4 ] = bd bb_sheet = from_array ( arr ) bb_sheet . column_headers = False bb_sheet . row_headers = False return bb_sheet","title":"bbsheet()"},{"location":"bbtools-reference/#btjenesten.bbtools.minitable","text":"Generate a mini-table for displaying inter-variable dependencies as indicated by the model Author: Audun Skau Hansen, Department of Chemistry, UiO Source code in btjenesten/bbtools.py def minitable ( titles , values , sheet ): \"\"\" Generate a mini-table for displaying inter-variable dependencies as indicated by the model Author: Audun Skau Hansen, Department of Chemistry, UiO \"\"\" arr = np . zeros (( len ( titles ), 2 ), dtype = object ) arr [:, 0 ] = relabel_defaults ( titles , sheet ) arr [:, 1 ] = values return from_array ( arr )","title":"minitable()"},{"location":"bbtools-reference/#btjenesten.bbtools.relabel_defaults","text":"Rename default variable (\"x0\", \"x1\", \"x2\") to variable names from sheet[1:,0] Author: Audun Skau Hansen, Department of Chemistry, UiO Source code in btjenesten/bbtools.py def relabel_defaults ( titles , sheet ): \"\"\" Rename default variable (\"x0\", \"x1\", \"x2\") to variable names from sheet[1:,0] Author: Audun Skau Hansen, Department of Chemistry, UiO \"\"\" new_names = to_array ( sheet )[ 1 : 4 , 0 ] new_titles = [] for i in titles : new_titles . append ( i . replace ( \"x0\" , new_names [ 0 ]) . replace ( \"x1\" , new_names [ 1 ]) . replace ( \"x2\" , new_names [ 2 ]) ) return new_titles","title":"relabel_defaults()"},{"location":"bbtools-reference/#btjenesten.bbtools.visualize_surfaces","text":"Visualize response surfaces the regressor model Author: Audun Skau Hansen, Department of Chemistry, UiO (2022) sheet = Box-Benhken data sheet regressor = sklearn LinearRegression instance Nx = mesh resolution along each axis Source code in btjenesten/bbtools.py def visualize_surfaces ( sheet , regressor , Nx = 300 ): \"\"\" Visualize response surfaces the regressor model Author: Audun Skau Hansen, Department of Chemistry, UiO (2022) sheet = Box-Benhken data sheet regressor = sklearn LinearRegression instance Nx = mesh resolution along each axis \"\"\" bounds = np . array ( to_array ( sheet )[ 1 :, 1 :], dtype = float ) xa = np . linspace ( bounds [ 0 , 0 ], bounds [ 0 , 1 ], Nx ) xb = np . linspace ( bounds [ 1 , 0 ], bounds [ 1 , 1 ], Nx ) xc = np . linspace ( bounds [ 2 , 0 ], bounds [ 2 , 1 ], Nx ) xab3 = np . vstack (( np . array ( np . meshgrid ( xa , xb )) . reshape ( 2 , - 1 ), np . zeros ( Nx ** 2 ))) . T yab = regressor . predict ( xab3 ) . reshape (( Nx , Nx )) plt . figure ( figsize = ( 9.5 , 8 )) plt . title ( to_array ( sheet )[ 1 , 0 ] + \" vs \" + to_array ( sheet )[ 2 , 0 ]) plt . contourf ( xa , xb , yab ) plt . xlabel ( to_array ( sheet )[ 1 , 0 ]) plt . ylabel ( to_array ( sheet )[ 2 , 0 ]) plt . colorbar () plt . show () xac3 = np . vstack (( np . array ( np . meshgrid ( xa , xc )) . reshape ( 2 , - 1 ), np . zeros ( Nx ** 2 ))) . T yac = regressor . predict ( xac3 ) . reshape (( Nx , Nx )) plt . figure ( figsize = ( 9.5 , 8 )) plt . title ( to_array ( sheet )[ 1 , 0 ] + \" vs \" + to_array ( sheet )[ 3 , 0 ]) plt . contourf ( xa , xc , yac ) plt . xlabel ( to_array ( sheet )[ 1 , 0 ]) plt . ylabel ( to_array ( sheet )[ 3 , 0 ]) plt . colorbar () plt . show () xbc3 = np . vstack (( np . array ( np . meshgrid ( xb , xc )) . reshape ( 2 , - 1 ), np . zeros ( Nx ** 2 ))) . T ybc = regressor . predict ( xbc3 ) . reshape (( Nx , Nx )) plt . figure ( figsize = ( 9.5 , 8 )) plt . title ( to_array ( sheet )[ 2 , 0 ] + \" vs \" + to_array ( sheet )[ 3 , 0 ]) plt . contourf ( xb , xc , ybc ) plt . xlabel ( to_array ( sheet )[ 2 , 0 ]) plt . ylabel ( to_array ( sheet )[ 3 , 0 ]) plt . colorbar () plt . show ()","title":"visualize_surfaces()"},{"location":"btjenesten-reference/","text":"B-tjenesten","title":"btjenesten"},{"location":"btjenesten-reference/#b-tjenesten","text":"","title":"B-tjenesten"},{"location":"veiledere/","text":"Veilederne i B-tjenesten f\u00e5r pedagogisk oppl\u00e6ring gjennom L\u00e6ringsassistentprogrammet ved Universitetet i Oslo, og f\u00e5r verdifull praktisk erfaring med utviklerverkt\u00f8y som git, markdown og Python. .card { box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2); max-width: 200px; margin: 5px 5px 5px 5px; padding: 25px; text-align: center; float: left; } .float-container { border: 3px solid #fff; padding: 20px; } .title { color: grey; font-size: 18px; } button { border: none; outline: 0; display: inline-block; padding: 8px; color: white; background-color: #000; text-align: center; cursor: pointer; width: 100%; font-size: 18px; } a { text-decoration: none; font-size: 22px; color: black; } button:hover, a:hover { opacity: 0.7; } Navn Kjemi (bachelor) Veileder B Kjemi (bachelor) Navn Kjemi (bachelor) Veileder B Kjemi (bachelor) Navn Kjemi (bachelor) Veileder B Kjemi (bachelor) Navn Kjemi (bachelor) Veileder B Kjemi (bachelor)","title":"V\u00e5re veiledere"}]}